// Code generated from optimizador_lexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 52, 396,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3,
	5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3,
	9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11,
	3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18,
	3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3,
	20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 6, 22, 275, 10, 22, 13, 22, 14,
	22, 276, 3, 22, 3, 22, 6, 22, 281, 10, 22, 13, 22, 14, 22, 282, 3, 23,
	6, 23, 286, 10, 23, 13, 23, 14, 23, 287, 3, 24, 3, 24, 7, 24, 292, 10,
	24, 12, 24, 14, 24, 295, 11, 24, 3, 24, 3, 24, 3, 25, 3, 25, 6, 25, 301,
	10, 25, 13, 25, 14, 25, 302, 3, 26, 3, 26, 6, 26, 307, 10, 26, 13, 26,
	14, 26, 308, 3, 27, 3, 27, 7, 27, 313, 10, 27, 12, 27, 14, 27, 316, 11,
	27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32,
	3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3,
	36, 3, 36, 3, 37, 3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41,
	3, 41, 3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46, 3,
	46, 3, 47, 3, 47, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 49, 6, 49, 368,
	10, 49, 13, 49, 14, 49, 369, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50,
	3, 50, 3, 50, 3, 50, 6, 50, 381, 10, 50, 13, 50, 14, 50, 382, 3, 50, 3,
	50, 3, 51, 6, 51, 388, 10, 51, 13, 51, 14, 51, 389, 3, 51, 3, 51, 3, 52,
	3, 52, 3, 52, 2, 2, 53, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53,
	28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71,
	37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89,
	46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 2, 3, 2, 10,
	3, 2, 50, 59, 3, 2, 36, 36, 7, 2, 67, 92, 97, 97, 99, 124, 211, 211, 243,
	243, 8, 2, 50, 59, 67, 92, 97, 97, 99, 124, 211, 211, 243, 243, 3, 2, 43,
	44, 3, 2, 12, 12, 6, 2, 11, 12, 15, 15, 34, 34, 94, 94, 9, 2, 34, 35, 37,
	37, 45, 45, 47, 48, 60, 60, 66, 66, 93, 95, 2, 404, 2, 3, 3, 2, 2, 2, 2,
	5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2,
	13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2,
	2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2,
	2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2,
	2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3,
	2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51,
	3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2,
	59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2,
	2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2,
	2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2,
	2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3,
	2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97,
	3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 3, 105, 3, 2, 2, 2,
	5, 124, 3, 2, 2, 2, 7, 145, 3, 2, 2, 2, 9, 167, 3, 2, 2, 2, 11, 178, 3,
	2, 2, 2, 13, 189, 3, 2, 2, 2, 15, 194, 3, 2, 2, 2, 17, 199, 3, 2, 2, 2,
	19, 207, 3, 2, 2, 2, 21, 212, 3, 2, 2, 2, 23, 218, 3, 2, 2, 2, 25, 224,
	3, 2, 2, 2, 27, 231, 3, 2, 2, 2, 29, 238, 3, 2, 2, 2, 31, 243, 3, 2, 2,
	2, 33, 253, 3, 2, 2, 2, 35, 256, 3, 2, 2, 2, 37, 259, 3, 2, 2, 2, 39, 262,
	3, 2, 2, 2, 41, 269, 3, 2, 2, 2, 43, 274, 3, 2, 2, 2, 45, 285, 3, 2, 2,
	2, 47, 289, 3, 2, 2, 2, 49, 298, 3, 2, 2, 2, 51, 304, 3, 2, 2, 2, 53, 310,
	3, 2, 2, 2, 55, 317, 3, 2, 2, 2, 57, 319, 3, 2, 2, 2, 59, 321, 3, 2, 2,
	2, 61, 323, 3, 2, 2, 2, 63, 325, 3, 2, 2, 2, 65, 327, 3, 2, 2, 2, 67, 330,
	3, 2, 2, 2, 69, 333, 3, 2, 2, 2, 71, 336, 3, 2, 2, 2, 73, 339, 3, 2, 2,
	2, 75, 341, 3, 2, 2, 2, 77, 343, 3, 2, 2, 2, 79, 345, 3, 2, 2, 2, 81, 347,
	3, 2, 2, 2, 83, 349, 3, 2, 2, 2, 85, 351, 3, 2, 2, 2, 87, 353, 3, 2, 2,
	2, 89, 355, 3, 2, 2, 2, 91, 357, 3, 2, 2, 2, 93, 359, 3, 2, 2, 2, 95, 361,
	3, 2, 2, 2, 97, 363, 3, 2, 2, 2, 99, 376, 3, 2, 2, 2, 101, 387, 3, 2, 2,
	2, 103, 393, 3, 2, 2, 2, 105, 106, 7, 37, 2, 2, 106, 107, 7, 107, 2, 2,
	107, 108, 7, 112, 2, 2, 108, 109, 7, 101, 2, 2, 109, 110, 7, 110, 2, 2,
	110, 111, 7, 119, 2, 2, 111, 112, 7, 102, 2, 2, 112, 113, 7, 103, 2, 2,
	113, 114, 7, 34, 2, 2, 114, 115, 7, 62, 2, 2, 115, 116, 7, 117, 2, 2, 116,
	117, 7, 118, 2, 2, 117, 118, 7, 102, 2, 2, 118, 119, 7, 107, 2, 2, 119,
	120, 7, 113, 2, 2, 120, 121, 7, 48, 2, 2, 121, 122, 7, 106, 2, 2, 122,
	123, 7, 64, 2, 2, 123, 4, 3, 2, 2, 2, 124, 125, 7, 102, 2, 2, 125, 126,
	7, 113, 2, 2, 126, 127, 7, 119, 2, 2, 127, 128, 7, 100, 2, 2, 128, 129,
	7, 110, 2, 2, 129, 130, 7, 103, 2, 2, 130, 131, 7, 34, 2, 2, 131, 132,
	7, 74, 2, 2, 132, 133, 7, 71, 2, 2, 133, 134, 7, 67, 2, 2, 134, 135, 7,
	82, 2, 2, 135, 136, 7, 93, 2, 2, 136, 137, 7, 51, 2, 2, 137, 138, 7, 50,
	2, 2, 138, 139, 7, 50, 2, 2, 139, 140, 7, 50, 2, 2, 140, 141, 7, 50, 2,
	2, 141, 142, 7, 50, 2, 2, 142, 143, 7, 95, 2, 2, 143, 144, 7, 61, 2, 2,
	144, 6, 3, 2, 2, 2, 145, 146, 7, 102, 2, 2, 146, 147, 7, 113, 2, 2, 147,
	148, 7, 119, 2, 2, 148, 149, 7, 100, 2, 2, 149, 150, 7, 110, 2, 2, 150,
	151, 7, 103, 2, 2, 151, 152, 7, 34, 2, 2, 152, 153, 7, 85, 2, 2, 153, 154,
	7, 86, 2, 2, 154, 155, 7, 67, 2, 2, 155, 156, 7, 69, 2, 2, 156, 157, 7,
	77, 2, 2, 157, 158, 7, 93, 2, 2, 158, 159, 7, 51, 2, 2, 159, 160, 7, 50,
	2, 2, 160, 161, 7, 50, 2, 2, 161, 162, 7, 50, 2, 2, 162, 163, 7, 50, 2,
	2, 163, 164, 7, 50, 2, 2, 164, 165, 7, 95, 2, 2, 165, 166, 7, 61, 2, 2,
	166, 8, 3, 2, 2, 2, 167, 168, 7, 102, 2, 2, 168, 169, 7, 113, 2, 2, 169,
	170, 7, 119, 2, 2, 170, 171, 7, 100, 2, 2, 171, 172, 7, 110, 2, 2, 172,
	173, 7, 103, 2, 2, 173, 174, 7, 34, 2, 2, 174, 175, 7, 85, 2, 2, 175, 176,
	7, 82, 2, 2, 176, 177, 7, 61, 2, 2, 177, 10, 3, 2, 2, 2, 178, 179, 7, 102,
	2, 2, 179, 180, 7, 113, 2, 2, 180, 181, 7, 119, 2, 2, 181, 182, 7, 100,
	2, 2, 182, 183, 7, 110, 2, 2, 183, 184, 7, 103, 2, 2, 184, 185, 7, 34,
	2, 2, 185, 186, 7, 74, 2, 2, 186, 187, 7, 82, 2, 2, 187, 188, 7, 61, 2,
	2, 188, 12, 3, 2, 2, 2, 189, 190, 7, 120, 2, 2, 190, 191, 7, 113, 2, 2,
	191, 192, 7, 107, 2, 2, 192, 193, 7, 102, 2, 2, 193, 14, 3, 2, 2, 2, 194,
	195, 7, 105, 2, 2, 195, 196, 7, 113, 2, 2, 196, 197, 7, 118, 2, 2, 197,
	198, 7, 113, 2, 2, 198, 16, 3, 2, 2, 2, 199, 200, 7, 116, 2, 2, 200, 201,
	7, 103, 2, 2, 201, 202, 7, 118, 2, 2, 202, 203, 7, 119, 2, 2, 203, 204,
	7, 116, 2, 2, 204, 205, 7, 112, 2, 2, 205, 206, 7, 61, 2, 2, 206, 18, 3,
	2, 2, 2, 207, 208, 7, 74, 2, 2, 208, 209, 7, 71, 2, 2, 209, 210, 7, 67,
	2, 2, 210, 211, 7, 82, 2, 2, 211, 20, 3, 2, 2, 2, 212, 213, 7, 85, 2, 2,
	213, 214, 7, 86, 2, 2, 214, 215, 7, 67, 2, 2, 215, 216, 7, 69, 2, 2, 216,
	217, 7, 77, 2, 2, 217, 22, 3, 2, 2, 2, 218, 219, 7, 42, 2, 2, 219, 220,
	7, 107, 2, 2, 220, 221, 7, 112, 2, 2, 221, 222, 7, 118, 2, 2, 222, 223,
	7, 43, 2, 2, 223, 24, 3, 2, 2, 2, 224, 225, 7, 42, 2, 2, 225, 226, 7, 101,
	2, 2, 226, 227, 7, 106, 2, 2, 227, 228, 7, 99, 2, 2, 228, 229, 7, 116,
	2, 2, 229, 230, 7, 43, 2, 2, 230, 26, 3, 2, 2, 2, 231, 232, 7, 114, 2,
	2, 232, 233, 7, 116, 2, 2, 233, 234, 7, 107, 2, 2, 234, 235, 7, 112, 2,
	2, 235, 236, 7, 118, 2, 2, 236, 237, 7, 104, 2, 2, 237, 28, 3, 2, 2, 2,
	238, 239, 7, 111, 2, 2, 239, 240, 7, 99, 2, 2, 240, 241, 7, 107, 2, 2,
	241, 242, 7, 112, 2, 2, 242, 30, 3, 2, 2, 2, 243, 244, 7, 116, 2, 2, 244,
	245, 7, 103, 2, 2, 245, 246, 7, 118, 2, 2, 246, 247, 7, 119, 2, 2, 247,
	248, 7, 116, 2, 2, 248, 249, 7, 112, 2, 2, 249, 250, 7, 34, 2, 2, 250,
	251, 7, 50, 2, 2, 251, 252, 7, 61, 2, 2, 252, 32, 3, 2, 2, 2, 253, 254,
	7, 85, 2, 2, 254, 255, 7, 82, 2, 2, 255, 34, 3, 2, 2, 2, 256, 257, 7, 74,
	2, 2, 257, 258, 7, 82, 2, 2, 258, 36, 3, 2, 2, 2, 259, 260, 7, 107, 2,
	2, 260, 261, 7, 104, 2, 2, 261, 38, 3, 2, 2, 2, 262, 263, 7, 102, 2, 2,
	263, 264, 7, 113, 2, 2, 264, 265, 7, 119, 2, 2, 265, 266, 7, 100, 2, 2,
	266, 267, 7, 110, 2, 2, 267, 268, 7, 103, 2, 2, 268, 40, 3, 2, 2, 2, 269,
	270, 7, 107, 2, 2, 270, 271, 7, 112, 2, 2, 271, 272, 7, 118, 2, 2, 272,
	42, 3, 2, 2, 2, 273, 275, 9, 2, 2, 2, 274, 273, 3, 2, 2, 2, 275, 276, 3,
	2, 2, 2, 276, 274, 3, 2, 2, 2, 276, 277, 3, 2, 2, 2, 277, 278, 3, 2, 2,
	2, 278, 280, 7, 48, 2, 2, 279, 281, 9, 2, 2, 2, 280, 279, 3, 2, 2, 2, 281,
	282, 3, 2, 2, 2, 282, 280, 3, 2, 2, 2, 282, 283, 3, 2, 2, 2, 283, 44, 3,
	2, 2, 2, 284, 286, 9, 2, 2, 2, 285, 284, 3, 2, 2, 2, 286, 287, 3, 2, 2,
	2, 287, 285, 3, 2, 2, 2, 287, 288, 3, 2, 2, 2, 288, 46, 3, 2, 2, 2, 289,
	293, 7, 36, 2, 2, 290, 292, 10, 3, 2, 2, 291, 290, 3, 2, 2, 2, 292, 295,
	3, 2, 2, 2, 293, 291, 3, 2, 2, 2, 293, 294, 3, 2, 2, 2, 294, 296, 3, 2,
	2, 2, 295, 293, 3, 2, 2, 2, 296, 297, 7, 36, 2, 2, 297, 48, 3, 2, 2, 2,
	298, 300, 7, 86, 2, 2, 299, 301, 9, 2, 2, 2, 300, 299, 3, 2, 2, 2, 301,
	302, 3, 2, 2, 2, 302, 300, 3, 2, 2, 2, 302, 303, 3, 2, 2, 2, 303, 50, 3,
	2, 2, 2, 304, 306, 7, 78, 2, 2, 305, 307, 9, 2, 2, 2, 306, 305, 3, 2, 2,
	2, 307, 308, 3, 2, 2, 2, 308, 306, 3, 2, 2, 2, 308, 309, 3, 2, 2, 2, 309,
	52, 3, 2, 2, 2, 310, 314, 9, 4, 2, 2, 311, 313, 9, 5, 2, 2, 312, 311, 3,
	2, 2, 2, 313, 316, 3, 2, 2, 2, 314, 312, 3, 2, 2, 2, 314, 315, 3, 2, 2,
	2, 315, 54, 3, 2, 2, 2, 316, 314, 3, 2, 2, 2, 317, 318, 7, 45, 2, 2, 318,
	56, 3, 2, 2, 2, 319, 320, 7, 47, 2, 2, 320, 58, 3, 2, 2, 2, 321, 322, 7,
	44, 2, 2, 322, 60, 3, 2, 2, 2, 323, 324, 7, 49, 2, 2, 324, 62, 3, 2, 2,
	2, 325, 326, 7, 39, 2, 2, 326, 64, 3, 2, 2, 2, 327, 328, 7, 62, 2, 2, 328,
	329, 7, 63, 2, 2, 329, 66, 3, 2, 2, 2, 330, 331, 7, 64, 2, 2, 331, 332,
	7, 63, 2, 2, 332, 68, 3, 2, 2, 2, 333, 334, 7, 63, 2, 2, 334, 335, 7, 63,
	2, 2, 335, 70, 3, 2, 2, 2, 336, 337, 7, 35, 2, 2, 337, 338, 7, 63, 2, 2,
	338, 72, 3, 2, 2, 2, 339, 340, 7, 62, 2, 2, 340, 74, 3, 2, 2, 2, 341, 342,
	7, 64, 2, 2, 342, 76, 3, 2, 2, 2, 343, 344, 7, 125, 2, 2, 344, 78, 3, 2,
	2, 2, 345, 346, 7, 127, 2, 2, 346, 80, 3, 2, 2, 2, 347, 348, 7, 93, 2,
	2, 348, 82, 3, 2, 2, 2, 349, 350, 7, 95, 2, 2, 350, 84, 3, 2, 2, 2, 351,
	352, 7, 42, 2, 2, 352, 86, 3, 2, 2, 2, 353, 354, 7, 43, 2, 2, 354, 88,
	3, 2, 2, 2, 355, 356, 7, 61, 2, 2, 356, 90, 3, 2, 2, 2, 357, 358, 7, 60,
	2, 2, 358, 92, 3, 2, 2, 2, 359, 360, 7, 46, 2, 2, 360, 94, 3, 2, 2, 2,
	361, 362, 7, 63, 2, 2, 362, 96, 3, 2, 2, 2, 363, 364, 7, 49, 2, 2, 364,
	365, 7, 44, 2, 2, 365, 367, 3, 2, 2, 2, 366, 368, 10, 6, 2, 2, 367, 366,
	3, 2, 2, 2, 368, 369, 3, 2, 2, 2, 369, 367, 3, 2, 2, 2, 369, 370, 3, 2,
	2, 2, 370, 371, 3, 2, 2, 2, 371, 372, 7, 44, 2, 2, 372, 373, 7, 49, 2,
	2, 373, 374, 3, 2, 2, 2, 374, 375, 8, 49, 2, 2, 375, 98, 3, 2, 2, 2, 376,
	377, 7, 49, 2, 2, 377, 378, 7, 49, 2, 2, 378, 380, 3, 2, 2, 2, 379, 381,
	10, 7, 2, 2, 380, 379, 3, 2, 2, 2, 381, 382, 3, 2, 2, 2, 382, 380, 3, 2,
	2, 2, 382, 383, 3, 2, 2, 2, 383, 384, 3, 2, 2, 2, 384, 385, 8, 50, 2, 2,
	385, 100, 3, 2, 2, 2, 386, 388, 9, 8, 2, 2, 387, 386, 3, 2, 2, 2, 388,
	389, 3, 2, 2, 2, 389, 387, 3, 2, 2, 2, 389, 390, 3, 2, 2, 2, 390, 391,
	3, 2, 2, 2, 391, 392, 8, 51, 2, 2, 392, 102, 3, 2, 2, 2, 393, 394, 7, 94,
	2, 2, 394, 395, 9, 9, 2, 2, 395, 104, 3, 2, 2, 2, 13, 2, 276, 282, 287,
	293, 302, 308, 314, 369, 382, 389, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'#include <stdio.h>'", "'double HEAP[100000];'", "'double STACK[100000];'",
	"'double SP;'", "'double HP;'", "'void'", "'goto'", "'return;'", "'HEAP'",
	"'STACK'", "'(int)'", "'(char)'", "'printf'", "'main'", "'return 0;'",
	"'SP'", "'HP'", "'if'", "'double'", "'int'", "", "", "", "", "", "", "'+'",
	"'-'", "'*'", "'/'", "'%'", "'<='", "'>='", "'=='", "'!='", "'<'", "'>'",
	"'{'", "'}'", "'['", "']'", "'('", "')'", "';'", "':'", "','", "'='",
}

var lexerSymbolicNames = []string{
	"", "TK_STDIOH", "TK_DHEAP", "TK_DSTACK", "TK_PSTAKC", "TK_PHEAP", "TK_VOID",
	"TK_GOTO", "TK_RETURN", "TK_HEAP", "TK_STACK", "TK_CASTINT", "TK_CASTCHAR",
	"TK_PRINTF", "TK_MAIN", "TK_RETMAIN", "TK_PUNSTACK", "TK_PUNHEAP", "TK_IF",
	"TK_DOUBLE", "TK_INT", "TK_FLOAT", "TK_ENTERO", "TK_CADENA", "TK_TEMPORAL",
	"TK_ETIQUETA", "TK_IDENTIFICADOR", "TK_SUMA", "TK_RESTA", "TK_MULTI", "TK_DIVI",
	"TK_MODULO", "TK_MENORIGUAL", "TK_MAYORIGUAL", "TK_IGUALDAD", "TK_DESIGUALDAD",
	"TK_MENOR", "TK_MAYOR", "TK_LI", "TK_LD", "TK_CI", "TK_CD", "TK_PI", "TK_PD",
	"TK_PYC", "TK_DP", "TK_COMA", "TK_IGUAL", "COMENTARIO_MUL", "COMENTARIO_LIN",
	"WHITESPACE",
}

var lexerRuleNames = []string{
	"TK_STDIOH", "TK_DHEAP", "TK_DSTACK", "TK_PSTAKC", "TK_PHEAP", "TK_VOID",
	"TK_GOTO", "TK_RETURN", "TK_HEAP", "TK_STACK", "TK_CASTINT", "TK_CASTCHAR",
	"TK_PRINTF", "TK_MAIN", "TK_RETMAIN", "TK_PUNSTACK", "TK_PUNHEAP", "TK_IF",
	"TK_DOUBLE", "TK_INT", "TK_FLOAT", "TK_ENTERO", "TK_CADENA", "TK_TEMPORAL",
	"TK_ETIQUETA", "TK_IDENTIFICADOR", "TK_SUMA", "TK_RESTA", "TK_MULTI", "TK_DIVI",
	"TK_MODULO", "TK_MENORIGUAL", "TK_MAYORIGUAL", "TK_IGUALDAD", "TK_DESIGUALDAD",
	"TK_MENOR", "TK_MAYOR", "TK_LI", "TK_LD", "TK_CI", "TK_CD", "TK_PI", "TK_PD",
	"TK_PYC", "TK_DP", "TK_COMA", "TK_IGUAL", "COMENTARIO_MUL", "COMENTARIO_LIN",
	"WHITESPACE", "ESC_SEQ",
}

type optimizador_lexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func Newoptimizador_lexer(input antlr.CharStream) *optimizador_lexer {

	l := new(optimizador_lexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "optimizador_lexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// optimizador_lexer tokens.
const (
	optimizador_lexerTK_STDIOH        = 1
	optimizador_lexerTK_DHEAP         = 2
	optimizador_lexerTK_DSTACK        = 3
	optimizador_lexerTK_PSTAKC        = 4
	optimizador_lexerTK_PHEAP         = 5
	optimizador_lexerTK_VOID          = 6
	optimizador_lexerTK_GOTO          = 7
	optimizador_lexerTK_RETURN        = 8
	optimizador_lexerTK_HEAP          = 9
	optimizador_lexerTK_STACK         = 10
	optimizador_lexerTK_CASTINT       = 11
	optimizador_lexerTK_CASTCHAR      = 12
	optimizador_lexerTK_PRINTF        = 13
	optimizador_lexerTK_MAIN          = 14
	optimizador_lexerTK_RETMAIN       = 15
	optimizador_lexerTK_PUNSTACK      = 16
	optimizador_lexerTK_PUNHEAP       = 17
	optimizador_lexerTK_IF            = 18
	optimizador_lexerTK_DOUBLE        = 19
	optimizador_lexerTK_INT           = 20
	optimizador_lexerTK_FLOAT         = 21
	optimizador_lexerTK_ENTERO        = 22
	optimizador_lexerTK_CADENA        = 23
	optimizador_lexerTK_TEMPORAL      = 24
	optimizador_lexerTK_ETIQUETA      = 25
	optimizador_lexerTK_IDENTIFICADOR = 26
	optimizador_lexerTK_SUMA          = 27
	optimizador_lexerTK_RESTA         = 28
	optimizador_lexerTK_MULTI         = 29
	optimizador_lexerTK_DIVI          = 30
	optimizador_lexerTK_MODULO        = 31
	optimizador_lexerTK_MENORIGUAL    = 32
	optimizador_lexerTK_MAYORIGUAL    = 33
	optimizador_lexerTK_IGUALDAD      = 34
	optimizador_lexerTK_DESIGUALDAD   = 35
	optimizador_lexerTK_MENOR         = 36
	optimizador_lexerTK_MAYOR         = 37
	optimizador_lexerTK_LI            = 38
	optimizador_lexerTK_LD            = 39
	optimizador_lexerTK_CI            = 40
	optimizador_lexerTK_CD            = 41
	optimizador_lexerTK_PI            = 42
	optimizador_lexerTK_PD            = 43
	optimizador_lexerTK_PYC           = 44
	optimizador_lexerTK_DP            = 45
	optimizador_lexerTK_COMA          = 46
	optimizador_lexerTK_IGUAL         = 47
	optimizador_lexerCOMENTARIO_MUL   = 48
	optimizador_lexerCOMENTARIO_LIN   = 49
	optimizador_lexerWHITESPACE       = 50
)
